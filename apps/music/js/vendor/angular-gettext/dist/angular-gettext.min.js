angular.module("gettext",[]);angular.module("gettext").constant("gettext",function(str){return str});angular.module("gettext").factory("gettextCatalog",["gettextPlurals","$http","$cacheFactory","$interpolate","$rootScope",function(gettextPlurals,$http,$cacheFactory,$interpolate,$rootScope){var catalog;var prefixDebug=function(string){if(catalog.debug&&catalog.currentLanguage!==catalog.baseLanguage){return"[MISSING]: "+string}else{return string}};catalog={debug:false,strings:{},baseLanguage:"en",currentLanguage:"en",cache:$cacheFactory("strings"),setCurrentLanguage:function(lang){this.currentLanguage=lang;$rootScope.$broadcast("gettextLanguageChanged")},setStrings:function(language,strings){if(!this.strings[language]){this.strings[language]={}}for(var key in strings){var val=strings[key];if(typeof val==="string"){this.strings[language][key]=[val]}else{this.strings[language][key]=val}}},getStringForm:function(string,n){var stringTable=this.strings[this.currentLanguage]||{};var plurals=stringTable[string]||[];return plurals[n]},getString:function(string,context){string=this.getStringForm(string,0)||prefixDebug(string);return context?$interpolate(string)(context):string},getPlural:function(n,string,stringPlural,context){var form=gettextPlurals(this.currentLanguage,n);string=this.getStringForm(string,form)||prefixDebug(n===1?string:stringPlural);return context?$interpolate(string)(context):string},loadRemote:function(url){return $http({method:"GET",url:url,cache:catalog.cache}).success(function(data){for(var lang in data){catalog.setStrings(lang,data[lang])}})}};return catalog}]);angular.module("gettext").directive("translate",["gettextCatalog","$parse","$animate",function(gettextCatalog,$parse,$animate){var trim=function(){if(!String.prototype.trim){return function(value){return typeof value==="string"?value.replace(/^\s*/,"").replace(/\s*$/,""):value}}return function(value){return typeof value==="string"?value.trim():value}}();function assert(condition,missing,found){if(!condition){throw new Error("You should add a "+missing+" attribute whenever you add a "+found+" attribute.")}}return{restrict:"A",terminal:true,priority:350,transclude:"element",link:function(scope,element,attrs,ctrl,transclude){assert(!attrs.translatePlural||attrs.translateN,"translate-n","translate-plural");assert(!attrs.translateN||attrs.translatePlural,"translate-plural","translate-n");var currentEl=null;var countFn=$parse(attrs.translateN);var pluralScope=null;function update(){var prevEl=currentEl;currentEl=transclude(scope,function(clone){var msgid=trim(clone.html());var translated;if(attrs.translatePlural){scope=pluralScope||(pluralScope=scope.$new());scope.$count=countFn(scope);translated=gettextCatalog.getPlural(scope.$count,msgid,attrs.translatePlural)}else{translated=gettextCatalog.getString(msgid)}clone.prop("__msgstr",translated);$animate.enter(clone,null,element);if(prevEl!==null){$animate.leave(prevEl,function(){prevEl=null})}})}if(attrs.translateN){scope.$watch(attrs.translateN,update)}scope.$on("gettextLanguageChanged",update);update()}}}]).directive("translate",["$compile",function($compile){return{restrict:"A",priority:-350,link:function(scope,element){var msgstr=element.prop("__msgstr");element.html(msgstr);$compile(element.contents())(scope)}}}]);angular.module("gettext").filter("translate",["gettextCatalog",function(gettextCatalog){return function(input){return gettextCatalog.getString(input)}}]);angular.module("gettext").factory("gettextPlurals",function(){return function(langCode,n){switch(langCode){case"ay":case"bo":case"cgg":case"dz":case"fa":case"id":case"ja":case"jbo":case"ka":case"kk":case"km":case"ko":case"ky":case"lo":case"ms":case"my":case"sah":case"su":case"th":case"tt":case"ug":case"vi":case"wo":case"zh":return 0;case"is":return n%10!=1||n%100==11?1:0;case"jv":return n!=0?1:0;case"mk":return n==1||n%10==1?0:1;case"ach":case"ak":case"am":case"arn":case"br":case"fil":case"fr":case"gun":case"ln":case"mfe":case"mg":case"mi":case"oc":case"pt_BR":case"tg":case"ti":case"tr":case"uz":case"wa":case"zh":return n>1?1:0;case"lv":return n%10==1&&n%100!=11?0:n!=0?1:2;case"lt":return n%10==1&&n%100!=11?0:n%10>=2&&(n%100<10||n%100>=20)?1:2;case"be":case"bs":case"hr":case"ru":case"sr":case"uk":return n%10==1&&n%100!=11?0:n%10>=2&&n%10<=4&&(n%100<10||n%100>=20)?1:2;case"mnk":return n==0?0:n==1?1:2;case"ro":return n==1?0:n==0||n%100>0&&n%100<20?1:2;case"pl":return n==1?0:n%10>=2&&n%10<=4&&(n%100<10||n%100>=20)?1:2;case"cs":case"sk":return n==1?0:n>=2&&n<=4?1:2;case"sl":return n%100==1?1:n%100==2?2:n%100==3||n%100==4?3:0;case"mt":return n==1?0:n==0||n%100>1&&n%100<11?1:n%100>10&&n%100<20?2:3;case"gd":return n==1||n==11?0:n==2||n==12?1:n>2&&n<20?2:3;case"cy":return n==1?0:n==2?1:n!=8&&n!=11?2:3;case"kw":return n==1?0:n==2?1:n==3?2:3;case"ga":return n==1?0:n==2?1:n<7?2:n<11?3:4;case"ar":return n==0?0:n==1?1:n==2?2:n%100>=3&&n%100<=10?3:n%100>=11?4:5;default:return n!=1?1:0}}});